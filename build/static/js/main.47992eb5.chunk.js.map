{"version":3,"sources":["components/Osoba.js","services/poruke.js","App.js","index.js"],"names":["Osoba","osoba","promjenaKategorije","brisiOsobu","oznaka","kategorija","className","ime","email","onClick","osnovniUrl","axios","get","noviObjekt","post","id","put","delete","App","useState","osobe","postaviOsobe","unosOsobe","postaviUnosOsobe","unosMaila","postaviUnosMaila","unosFiltera","postaviUnosFiltera","ispisSve","postaviIspis","kategorijaa","postaviKategoriju","porukeZaIspis","filter","includes","useEffect","porukeServer","then","response","data","promjenaUnosaFiltera","e","target","value","length","osvjeziUnos","onChange","onKeyUp","map","o","key","tempOsoba","find","p","temp","onSubmit","preventDefault","novaOsobaVar","datum","Date","toISOString","concat","onDoubleClick","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47992eb5.chunk.js","sourcesContent":["import React from 'react'\n\nconst Osoba = ({ osoba, promjenaKategorije, brisiOsobu }) => {\n  \n  const oznaka = osoba.kategorija == \"Prijatelj\" ? \"Označi kao poznanika\" : \"Označi kao prijatelja\"\n  return (\n      <li className=\"poruka\">\n          <b>{osoba.ime}</b> &nbsp; - &nbsp;\n          {osoba.email} &nbsp; ({osoba.kategorija}) &nbsp;\n          <button onClick={promjenaKategorije}>{oznaka}</button>&nbsp;\n          <button onClick={brisiOsobu}>Obrisi</button>\n      </li>\n  )\n}\n\nexport default Osoba","import axios from 'axios'\nconst osnovniUrl = 'http://localhost:3003/api/osobe'\n \nconst dohvatiSve = () => {\n    return axios.get(osnovniUrl);    \n}\n \nconst stvori = noviObjekt => {   \n    return axios.post(osnovniUrl, noviObjekt)\n}\n \nconst osvjezi = (id, noviObjekt) => {    \n    return axios.put(`${osnovniUrl}/${id}`, noviObjekt)\n} \n\t\nconst brisi = id => {\n    return axios.delete(`${osnovniUrl}/${id}`)\n}\n \nexport default { dohvatiSve, stvori, osvjezi, brisi}","import React,{useState,useEffect} from 'react'\nimport Osoba from './components/Osoba.js'\nimport porukeServer from './services/poruke'\n\nconst App = () => {\n    const [ osobe, postaviOsobe] = useState([]) /*Niz osoba */\n    const [ unosOsobe, postaviUnosOsobe] = useState(\"Unesi ime i prezime\") \n    const [ unosMaila, postaviUnosMaila] = useState(\"Unesi e-mail\")\n    const [ unosFiltera, postaviUnosFiltera] = useState(\"Unesi filter\")\n    const [ ispisSve, postaviIspis] = useState(true)\n    const [kategorijaa,postaviKategoriju]=useState(\"Prijatelj\")\n\n    const porukeZaIspis = ispisSve\n    ? osobe //Ako je ispisiSve == true\n    : osobe.filter(osoba => osoba.ime.includes(unosFiltera)) \n    \n    useEffect( () =>{\n      porukeServer\n      .dohvatiSve()    \n      .then(response => {\n        postaviOsobe(response.data)\n      })\n      \n      }, [])    \n\n    const promjenaUnosaOsobe = (e) =>{\n        postaviUnosOsobe(e.target.value)\n    }\n\n    const promjenaUnosaMaila = (e) =>{\n        postaviUnosMaila(e.target.value)\n    }\n\n    const promjenaUnosaFiltera = (e) =>{\n      postaviUnosFiltera(e.target.value)\n      if(unosFiltera.length===0)\n      {\n        postaviIspis(true)\n      }\n      else{\n        postaviIspis(false)\n      }\n    }\n\n    const osvjeziUnos = () =>{\n      postaviUnosOsobe('')\n      postaviUnosMaila('')  \n    }    \n\n    const novaOsoba = (e) => {\n      e.preventDefault()\n      postaviKategoriju(\"Prijatelj\")\n      const novaOsobaVar = {\n        id:osobe.length+1,\n        ime: unosOsobe,\n        email:unosMaila,\n        datum: new Date().toISOString(),\n        kategorija:kategorijaa\n      }      \n\n      porukeServer\n      .stvori(novaOsobaVar)\n      .then(response => {\n        postaviOsobe(osobe.concat(response.data))\n        \n        postaviUnosOsobe('')\n        postaviUnosMaila('')\n\n      })\n    }\n\n    const brisiOsobu = (id) => {\n      \n      porukeServer\n        .brisi(id)\n        .then( response => {\n          postaviOsobe(osobe.filter(p => p.id !== id))\n        })\n    }\n    \n\n    const promjenaKategorije = (id) => {      \n      const tempOsoba = osobe.find(p => p.id === id)\n      let temp=\"\"\n      if(tempOsoba.kategorija===\"Prijatelj\") temp =\"Poznanik\"\n      else temp=\"Prijatelj\"\n\n      \n      tempOsoba.kategorija=temp\n     \n      porukeServer\n        .osvjezi(id, tempOsoba)\n        .then(response => {          \n          postaviOsobe(osobe.map(p => p.id !== id ? p : response.data))\n        })\n    }\n\n\n    return (\n      <div>\n        <h1>Adresar</h1>\n          <input value={unosFiltera} onChange={promjenaUnosaFiltera} onKeyUp={promjenaUnosaFiltera}/> &nbsp;\n        <ul>\n          {porukeZaIspis.map(o =>\n            <Osoba key={o.id} osoba={o}  promjenaKategorije={()=>promjenaKategorije(o.id)} brisiOsobu={() => brisiOsobu(o.id)} />\n          )}        \n        </ul>\n        <form onSubmit={novaOsoba}>\n          <input value={unosOsobe} onChange={promjenaUnosaOsobe} onDoubleClick={osvjeziUnos}/> &nbsp;\n          <input value={unosMaila} onChange={promjenaUnosaMaila} onDoubleClick={osvjeziUnos}/>\n          <button type='submit'>Spremi</button>\n        </form>\n      </div>\n    )\n  }\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\n\nReactDOM.render(<App />,document.getElementById('root'))\n"],"sourceRoot":""}